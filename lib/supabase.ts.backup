import { createClient } from "@supabase/supabase-js"

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!

// Client-side Supabase client
export const supabase = createClient(supabaseUrl, supabaseAnonKey)

// Database types
export interface Database {
  public: {
    Tables: {
      users: {
        Row: {
          id: string
          email: string
          first_name: string
          last_name: string
          email_confirmed: boolean
          created_at: string
          updated_at: string
        }
        Insert: {
          email: string
          first_name: string
          last_name: string
          email_confirmed?: boolean
        }
        Update: {
          email?: string
          first_name?: string
          last_name?: string
          email_confirmed?: boolean
          updated_at?: string
        }
      }
      files: {
        Row: {
          id: string
          user_id: string
          filename: string
          original_name: string
          file_type: string
          file_size: number
          content_text: string | null
          upload_date: string
        }
        Insert: {
          user_id: string
          filename: string
          original_name: string
          file_type: string
          file_size: number
          content_text?: string | null
        }
        Update: {
          filename?: string
          original_name?: string
          file_type?: string
          file_size?: number
          content_text?: string | null
        }
      }
      quizzes: {
        Row: {
          id: string
          user_id: string
          file_id: string
          title: string
          description: string | null
          difficulty_level: string
          total_questions: number
          created_at: string
        }
        Insert: {
          user_id: string
          file_id: string
          title: string
          description?: string | null
          difficulty_level?: string
          total_questions: number
        }
        Update: {
          title?: string
          description?: string | null
          difficulty_level?: string
          total_questions?: number
        }
      }
      quiz_questions: {
        Row: {
          id: string
          quiz_id: string
          question_text: string
          question_type: string
          options: any
          correct_answer: string
          explanation: string | null
          question_order: number
        }
        Insert: {
          quiz_id: string
          question_text: string
          question_type?: string
          options?: any
          correct_answer: string
          explanation?: string | null
          question_order: number
        }
        Update: {
          question_text?: string
          question_type?: string
          options?: any
          correct_answer?: string
          explanation?: string | null
          question_order?: number
        }
      }
      quiz_attempts: {
        Row: {
          id: string
          user_id: string
          quiz_id: string
          score: number
          total_questions: number
          time_taken: number | null
          answers: any
          completed_at: string
        }
        Insert: {
          user_id: string
          quiz_id: string
          score: number
          total_questions: number
          time_taken?: number | null
          answers?: any
        }
        Update: {
          score?: number
          total_questions?: number
          time_taken?: number | null
          answers?: any
        }
      }
      reviewers: {
        Row: {
          id: string
          user_id: string
          file_id: string
          title: string
          content: string
          reviewer_type: string
          created_at: string
        }
        Insert: {
          user_id: string
          file_id: string
          title: string
          content: string
          reviewer_type?: string
        }
        Update: {
          title?: string
          content?: string
          reviewer_type?: string
        }
      }
      analytics: {
        Row: {
          id: string
          user_id: string
          action_type: string
          resource_id: string | null
          metadata: any
          created_at: string
        }
        Insert: {
          user_id: string
          action_type: string
          resource_id?: string | null
          metadata?: any
        }
        Update: {
          action_type?: string
          resource_id?: string | null
          metadata?: any
        }
      }
    }
  }
}
